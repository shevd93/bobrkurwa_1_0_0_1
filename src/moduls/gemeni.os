#Использовать "./tokens"

Перем АпиКей;

Функция ОтправитьЗапросВИИ(ТекстЗапроса) Экспорт
	
	ХттпСоединение = Новый HTTPСоединение("https://generativelanguage.googleapis.com",,,,, 60);
	
	Заголовки = Новый Соответствие();	
	Заголовки.Вставить("Content-Type", "application/json");
	Заголовки.Вставить("X-goog-api-key", АпиКей);

	ХттпЗапрос = Новый HTTPЗапрос("/v1beta/models/gemini-2.5-flash:generateContent", Заголовки);

	Тело = "{
			| ""contents"": [
			| {
			| 	""parts"": [
			| 	{
			| 		""text"": ""%ТекстЗапроса%""
			| 	}
			| 	]
			| }
			| ]
			| }";

	Тело = СтрЗаменить(Тело, "%ТекстЗапроса%", ТекстЗапроса);

	ХттпЗапрос.УстановитьТелоИзСтроки(Тело);

	ХттпОтвет = ХттпСоединение.ОтправитьДляОбработки(ХттпЗапрос);
	ОтветСтрока = ХттпОтвет.ПолучитьТелоКакСтроку(); 

	Если ХттпОтвет.КодСостояния <> 200 Тогда
		Сообщить(ОтветСтрока);
		Возврат "Ошибка";
	КонецЕсли;

	Данные = ПрочитатьДжейсон(ОтветСтрока);

	ТекстОтвета = Данные.candidates[0].content.parts[0].text;

	Возврат ТекстОтвета; 

КонецФункции

Функция ОценитьСообщениеНаТоксичность(ТекстСообщения) Экспорт

	ТекстЗапроса = 
	"Оцени на сколько токсично это сообщение по шкале от 1 до 10: %ТекстСообщения% . 
	|Ответ верни в виде JSON с полями оценка и комментарий.";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстСообщения%", ТекстСообщения);

	ОтветСтрока = ОтправитьЗапросВИИ(ТекстЗапроса);

	Ответ = Новый Структура("оценка, комментарий", 0, "");

	Если ОтветСтрока = "Ошибка" Тогда
		Возврат Ответ;
	КонецЕсли;

	ОтветСтрока = СтрЗаменить(ОтветСтрока, "json", "");
	ОтветСтрока = СтрЗаменить(ОтветСтрока, "`", "");

	//Сообщить(ОтветСтрока);

	Попытка
		Ответ = ПрочитатьДжейсон(ОтветСтрока);	
	Исключение
	КонецПопытки;

	Возврат Ответ;

КонецФункции

Функция ПрочитатьДжейсон(Тело)
	
	ЧтениеДжейсон = Новый ЧтениеJSON();
	ЧтениеДжейсон.УстановитьСтроку(Тело);
	Данные = ПрочитатьJSON(ЧтениеДжейсон);
	ЧтениеДжейсон.Закрыть();
	Возврат Данные;

КонецФункции

АпиКей = tokens.АпиКейДжемени;
